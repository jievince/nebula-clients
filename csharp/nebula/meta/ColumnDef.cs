/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace nebula.meta
{

  [Serializable]
  public partial class ColumnDef : TBase
  {
    private byte[] name;
    private ColumnTypeDef type;
    private nebula.Value default_value;
    private bool nullable;

    public byte[] Name
    {
      get
      {
        return name;
      }
      set
      {
        __isset.name = true;
        this.name = value;
      }
    }

    public ColumnTypeDef Type
    {
      get
      {
        return type;
      }
      set
      {
        __isset.type = true;
        this.type = value;
      }
    }

    public nebula.Value Default_value
    {
      get
      {
        return default_value;
      }
      set
      {
        __isset.default_value = true;
        this.default_value = value;
      }
    }

    public bool Nullable
    {
      get
      {
        return nullable;
      }
      set
      {
        __isset.nullable = true;
        this.nullable = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool name;
      public bool type;
      public bool default_value;
      public bool nullable;
    }

    public ColumnDef() {
      this.nullable = false;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              this.name = iprot.ReadBinary();
              this.__isset.name = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              this.type = new ColumnTypeDef();
              this.type.Read(iprot);
              this.__isset.type = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              this.default_value = new nebula.Value();
              this.default_value.Read(iprot);
              this.__isset.default_value = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Bool) {
              this.nullable = iprot.ReadBool();
              this.__isset.nullable = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ColumnDef");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (this.name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(this.name);
        oprot.WriteFieldEnd();
      }
      if (this.type != null && __isset.type) {
        field.Name = "type";
        field.Type = TType.Struct;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        this.type.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (this.default_value != null && __isset.default_value) {
        field.Name = "default_value";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        this.default_value.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.nullable) {
        field.Name = "nullable";
        field.Type = TType.Bool;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(this.nullable);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ColumnDef(");
      sb.Append("name: ");
      sb.Append(this.name);
      sb.Append(",type: ");
      sb.Append(this.type== null ? "<null>" : this.type.ToString());
      sb.Append(",default_value: ");
      sb.Append(this.default_value== null ? "<null>" : this.default_value.ToString());
      sb.Append(",nullable: ");
      sb.Append(this.nullable);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
